version: '3.9'

services:
    rabbitmq:
      image: rabbitmq:3-management-alpine
      restart: always
      container_name: 'rabbitmq'
      ports:
        - 5672:5672
        - 15672:15672
      #volumes:
      #  - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      #  - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    
    init_rabbitmq: 
      build:
        context: ./
        dockerfile: scripts/Dockerfile 
      depends_on:
        - rabbitmq
    
    mongo:
      image: mongo:7.0
      restart: always
      ports:
        - "27017:27017"
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: root
        MONGO_INITDB_DATABASE: mongodbuser
      #volumes:
      #  - "mongodb-data:/var/lib/mongodb" 

    mongo-express:
      image: mongo-express
      restart: always
      ports:
        - 8081:8081
      environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: root
        ME_CONFIG_MONGODB_ADMINPASSWORD: root
        ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
        ME_CONFIG_BASICAUTH: false   

    mysql:
      image: mysql:8.0
      restart: always
      ports:
        - "3306:3306"
      environment:
        MYSQL_ROOT_PASSWORD: root 
        MYSQL_DATABASE: mysqluser    
      #volumes:
      #  - "mysql-data:/var/lib/mysql"  

    postgres: 
      image: postgres:16.3-alpine3.20
      restart: always
      container_name: postgres
      ports:
        - 5432:5432
      environment:
        POSTGRES_PASSWORD: root
      #volumes:
      # - postgres-data:/var/lib/postgres

#volumes:
#  mongodb-data:
#  mysql-data:
#  postgres-data:
